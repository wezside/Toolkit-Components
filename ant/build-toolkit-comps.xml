<?xml version="1.0" encoding="UTF-8"?>
<project name="Toolkit Component Build" default="release" basedir="..">

	<property file="${basedir}/ant/.properties" />
	
	<condition property="isLinux">
	  <os family="unix" />
	</condition>
	
	<condition property="isWin">
	    <os family="windows" />		
	</condition>	
	
	<target name="linux" if="isLinux">
	    <echo message="OS is Linux" />
		<property name="FLEX_HOME" value="${FLEX_HOME_LINUX}"/>
	</target>
	
	<target name="win" if="isWin">
	    <echo message="OS is Windows" />
		<property name="FLEX_HOME" value="${FLEX_HOME_PC}"/>
	</target>	
	
	<!-- Clean project dirs -->
	<target name="clean" depends="win,linux">
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" />
		<delete>
			<fileset dir="${basedir}/swc">
			    <include name="wezside.toolkit.*"/>
			</fileset>
		</delete>
	</target>
		
	<!-- Inject version -->
	<target name="inject-version" depends="clean">
		
		<!-- README -->
		<loadfile property="readme.contents" srcFile="${basedir}/README.md">
			<filterchain>
				<tokenfilter>
					<replaceregex pattern="(Build [0-9]\.[0-9])(\.[0-9]+)" replace="Build ${version}${build.int}" flags="gis" />
				</tokenfilter>
			</filterchain>
		</loadfile>		
		
		<!-- Sort properties file -->
		<loadfile property="propertyfile.content" srcfile="${prop.file}" />
		<property name="eol" value="${line.separator}" />
		<pathconvert property="sorted" pathsep="${eol}">
			<sort>
				<tokens>
					<string value="${propertyfile.content}" />
					<stringtokenizer delims="${line.separator}" />
				</tokens>
			</sort>
		</pathconvert>
		<echo message="${sorted}" file="${prop.file}" />
		<property file="${basedir}/ant/.properties" />
		<echo message="${readme.contents}" file="${basedir}/README.md" />
	</target>	

	<!-- Prepare file list for inclusion in compc process ala ledtechdesign.com/2009/01/flex-shell-ant-tasks/ -->
	<target name="resolve-class-path" depends="inject-version">
		<path id="list_1">
			<fileset dir="${basedir}/src">
				<include name="com/wezside/**" />
				<exclude name="**/test/**" />
				<exclude name="**/gs/**" />
				<exclude name="**/Animation/**" />
				<exclude name="**/sample/**" />
				<exclude name="**/test/**" />
			</fileset>
		</path>
		<pathconvert property="project_classes_property" pathsep="," dirsep="/" refid="list_1">
			<map from="${basedir}/src/" to="" />
		</pathconvert>
		<echo>${project_classes_property}</echo>
	</target>		
	
	<!-- Build SWC -->
	<target name="build-swc" depends="resolve-class-path">
		
		<compc output="${swc.path}/wezside.toolkit.comps.${version}${build.int}.swc" 
			   fork="true"
			   maxmemory="512m">
			<source-path path-element="${basedir}/src"/>
			<include-sources dir="${basedir}/src" includes="${project_classes_property}"/>
			<external-library-path file="${basedir}/lib/wezside.toolkit.${version}${build.int}.swc" append="true"/>
			<external-library-path file="${basedir}/lib/greensock.swc" append="true"/>
		</compc>
	</target>	
	
	<!-- Copy swc -->
	<target name="release" depends="build-swc">
		<copy todir="${basedir}/../Modulo/lib/" verbose="false">
			<fileset dir="${swc.path}" defaultexcludes="true">
				<include name="wezside.toolkit.*" />
			</fileset>
		</copy>		
	</target>	
</project>